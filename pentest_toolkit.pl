#!/usr/bin/perl
use strict;
use warnings;
use Getopt::Long;
use Term::ANSIColor;
use File::Path qw(make_path);

# المتغيرات العامة
my $target;
my $output_dir = 'results';

# معالجة المعطيات
GetOptions(
    "target|t=s" => \$target,
    "output|o=s" => \$output_dir
) or die "خطأ في المعطيات!\n";

# التحقق من وجود الهدف
die "يرجى تحديد الهدف باستخدام -t\n" unless $target;

# عرض البانر
sub show_banner {
    print colored(['cyan'], q{
    ╔════════════════════════════════════════╗
    ║        Penetration Testing Tools       ║
    ║    (Nikto, WPScan, Maltego, Spider)   ║
    ╚════════════════════════════════════════╝
    });
}

# التحقق من وجود الأدوات
sub check_tools {
    my @required_tools = ('nikto', 'wpscan', 'maltego', 'sf');
    my @missing_tools;

    for my $tool (@required_tools) {
        push @missing_tools, $tool unless `which $tool 2>/dev/null`;
    }

    if (@missing_tools) {
        print colored(['red'], "الأدوات التالية غير مثبتة:\n");
        print "- $_\n" for @missing_tools;
        print "\nيرجى تثبيت الأدوات المفقودة باستخدام:\n";
        print "sudo apt install nikto wpscan maltego spiderfoot\n";
        exit 1;
    }
}

# تشغيل Nikto
sub run_nikto {
    print colored(['yellow'], "\n[+] بدء فحص Nikto...\n");
    my $output_file = "$output_dir/nikto_results.txt";
    
    system("nikto -h $target -o $output_file") == 0
        or print colored(['red'], "[!] خطأ في تشغيل Nikto\n");
    
    print colored(['green'], "[✓] تم حفظ نتائج Nikto في: $output_file\n") if -f $output_file;
}

# تشغيل WPScan
sub run_wpscan {
    print colored(['yellow'], "\n[+] بدء فحص WPScan...\n");
    my $output_file = "$output_dir/wpscan_results.txt";
    
    system("wpscan --url $target --output $output_file") == 0
        or print colored(['red'], "[!] خطأ في تشغيل WPScan\n");
    
    print colored(['green'], "[✓] تم حفظ نتائج WPScan في: $output_file\n") if -f $output_file;
}

# تشغيل Maltego
sub run_maltego {
    print colored(['yellow'], "\n[+] تشغيل Maltego...\n");
    
    system("maltego -target $target &") == 0
        or print colored(['red'], "[!] خطأ في تشغيل Maltego\n");
    
    print colored(['green'], "[✓] تم تشغيل Maltego\n");
}

# تشغيل Spiderfoot
sub run_spiderfoot {
    print colored(['yellow'], "\n[+] بدء فحص Spiderfoot...\n");
    my $output_file = "$output_dir/spiderfoot_results.txt";
    
    # تشغيل خادم Spiderfoot
    system("sf -l 127.0.0.1:5001 &");
    sleep(5); # انتظار بدء الخادم
    
    system("sf -s $target -o $output_file") == 0
        or print colored(['red'], "[!] خطأ في تشغيل Spiderfoot\n");
    
    print colored(['green'], "[✓] تم حفظ نتائج Spiderfoot في: $output_file\n") if -f $output_file;
    
    # إيقاف خادم Spiderfoot
    system("pkill -f 'sf -l'");
}

# الدالة الرئيسية
sub main {
    show_banner();
    check_tools();
    
    # إنشاء مجلد النتائج
    make_path($output_dir);
    
    # تشغيل الأدوات بالترتيب
    run_nikto();
    run_wpscan();
    run_maltego();
    run_spiderfoot();
    
    print colored(['green'], "\n[✓] اكتمل الفحص! راجع مجلد النتائج للتفاصيل.\n");
}

# معالجة الأخطاء والإيقاف
$SIG{INT} = sub {
    print colored(['red'], "\n[!] تم إيقاف البرنامج\n");
    exit 0;
};

# تشغيل البرنامج
eval {
    main();
};
if ($@) {
    print colored(['red'], "\n[!] خطأ: $@\n");
    exit 1;
}